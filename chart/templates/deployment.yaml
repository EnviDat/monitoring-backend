apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      hostAliases:
        {{- toYaml .Values.hostAliases | nindent 8 }}

      initContainers:

        - name: collectstatic
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - name: frontend-static
            mountPath: "/opt/app/static"
          env:
            {{- toYaml .Values.extraEnv | nindent 12 }}
          envFrom:
            {{- toYaml .Values.extraEnvFrom | nindent 12 }}
          resources:
            {{- toYaml .Values.initResources | nindent 12 }}
          command: ['sh', '-c', 'python manage.py collectstatic --noinput']

      containers:

        - name: api
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          {{- if .Values.probes.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /api/gcnet/models
              host: {{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local
              port: http
            failureThreshold: 1
            periodSeconds: 30
            initialDelaySeconds: 10
            timeoutSeconds: 10
          {{- end }}
          {{- if .Values.probes.readinessProbe.enabled }}
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - exec pg_isready --host $DATABASE_HOST
            failureThreshold: 3
            successThreshold: 1
            timeoutSeconds: 5
          {{- end }}
          {{- if .Values.probes.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: /api/gcnet/models
              host: {{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local
              port: http
            failureThreshold: 5
            periodSeconds: 10
            initialDelaySeconds: 20
            timeoutSeconds: 10
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            {{- toYaml .Values.extraEnv | nindent 12 }}
          envFrom:
            {{- toYaml .Values.extraEnvFrom | nindent 12 }}
          volumeMounts: []

        {{- if .Values.proxy.enabled }}
        - name: proxy
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}-proxy:{{ .Values.proxy.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.proxy.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.proxy.resources | nindent 12 }}
          env:
          - name: MONITORING_API_HOST
            value: "{{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.service.port }}"
          volumeMounts:
          - name: frontend-static
            mountPath: "/opt/app/static"
          {{- if .Values.probes.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /nghealth
              port: {{ .Values.proxy.port }}
            periodSeconds: 20
          {{- end }}
          {{- if .Values.probes.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.port }}
              httpHeaders:
              - name: Host
                value: $MONITORING_API_HOST
            initialDelaySeconds: 30
          {{- end }}
        {{- end }}

        {{- if .Values.gcnetImporter.enabled -}}
        - name: import-gcnet
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports: []
          command: ['sh', '-c', 'python', '-c']
          args: ['from gcnet import main; main(["-r 10"])']
          resources:
            {{- toYaml .Values.gcnetImporter.resources | nindent 12 }}
          env:
            {{- toYaml .Values.extraEnv | nindent 12 }}
          envFrom:
            {{- toYaml .Values.extraEnvFrom | nindent 12 }}
          volumeMounts: []
        {{- end }}

        {{- if .Values.lwfImporter.enabled -}}
        - name: import-lwf
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports: []
          command: ['sh', '-c', 'python', '-c']
          args: ['from lwf import main; main(["-r 10"])']
          resources:
            {{- toYaml .Values.gcnetImporter.resources | nindent 12 }}
          env:
            {{- toYaml .Values.extraEnv | nindent 12 }}
          envFrom:
            {{- toYaml .Values.extraEnvFrom | nindent 12 }}
          volumeMounts: []
        {{- end }}

      volumes:
      - name: frontend-static
        emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
