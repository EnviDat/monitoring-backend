# Default values for chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: registry.envidat.ch/envidat/monitoring-api
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets:
  - name: harbor-reg-creds
nameOverride: ""
fullnameOverride: ""

gcnetImporter:
  enabled: true
  resources:
    limits:
      cpu: 1000m
      memory: 1000Mi
    requests:
      cpu: 100m
      memory: 100Mi
lwfImporter:
  enabled: true
  resources:
    limits:
      cpu: 1000m
      memory: 1000Mi
    requests:
      cpu: 100m
      memory: 100Mi

extraEnv:
  - name: APP_NAME
    value: "monitoring-api"

extraEnvFrom:
  - secretRef:
      name: monitoring-api-vars
  - secretRef:
      name: monitoring-lwf-vars
  - secretRef:
      name: monitoring-gcnet-vars

hostAliases:
  - ip: 10.30.1.29
    hostnames:
      - "postgres.wsl.ch"
  - ip: 10.30.1.34
    hostnames:
      - "dbpg01.wsl.ch"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 33

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

probes:
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false
  startupProbe:
    enabled: false

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: true
  className: ""
  annotations:
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/router.tls: "true"
  hosts:
    - host: monitoring.envidat.ch
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
   - secretName: envidat-star
     hosts:
       - monitoring.envidat.ch

resources:
  limits:
    cpu: 2000m
    memory: 2Gi
  requests:
    cpu: 200m
    memory: 500Mi

initResources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 256Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Nginx Proxy (Official Image)
proxy:
  enabled: true
  image:
    tag: 1.21
  port: 80
  resources:
    limits:
      cpu: 500m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 100Mi
